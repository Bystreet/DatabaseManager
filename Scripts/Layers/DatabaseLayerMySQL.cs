// =======================================================================================
// DatabaseLayerMySQL
// by Weaver (Fhiz)
// MIT licensed
// =======================================================================================

using wovencode;
using UnityEngine;
using System;
using System.Collections.Generic;
using MySql.Data;
using MySql.Data.MySqlClient;

namespace wovencode
{
	
	// ===================================================================================
	// DatabaseLayerMySQL
	// ===================================================================================
	[System.Serializable]
	public partial class DatabaseLayerMySQL : DatabaseAbstractionLayer
	{
		
		/*
			TODO:
			
			The whole section is still work in progress
			
		*/
		
		// ================================ API METHODS ==================================
		
		// -------------------------------------------------------------------------------
		// Awake
		// -------------------------------------------------------------------------------
		public override void Awake()
		{
		}
		
		// -------------------------------------------------------------------------------
		// 
		// -------------------------------------------------------------------------------
		public override void OpenConnection()
		{
		
		}
		
		// -------------------------------------------------------------------------------
		// 
		// -------------------------------------------------------------------------------
		public override void CloseConnection()
		{
		
		}
		
		// -------------------------------------------------------------------------------
		// 
		// -------------------------------------------------------------------------------
		public override void CreateTable<T>()
		{
		
		}
		
		// -------------------------------------------------------------------------------
		// 
		// -------------------------------------------------------------------------------
		public override void CreateIndex(string tableName, string[] columnNames, bool unique = false)
		{
		
		}
		
		// -------------------------------------------------------------------------------
		// 
		// -------------------------------------------------------------------------------
		public override List<T> Query<T>(string query, params object[] args)
		{
			return null;
		}
		
		// -------------------------------------------------------------------------------
		// 
		// -------------------------------------------------------------------------------
		public override void Execute(string query, params object[] args)
		{
		
		}
		
		// -------------------------------------------------------------------------------
		// 
		// -------------------------------------------------------------------------------
		public override T FindWithQuery<T>(string query, params object[] args)
		{
			return new T{};
		}
		
		// -------------------------------------------------------------------------------
		// 
		// -------------------------------------------------------------------------------
		public override void Insert(object obj)
		{
		}
		
		// -------------------------------------------------------------------------------
		// 
		// -------------------------------------------------------------------------------
		public override void InsertOrReplace(object obj)
		{
		
		}
		
		// -------------------------------------------------------------------------------
		// 
		// -------------------------------------------------------------------------------
		public override void BeginTransaction()
		{
		
		
		}
		
		// -------------------------------------------------------------------------------
		// 
		// -------------------------------------------------------------------------------
		public override void Commit()
		{
		
		}
		
		// -------------------------------------------------------------------------------

	}

}

// =======================================================================================